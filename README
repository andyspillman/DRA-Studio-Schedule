IU Department of Recording Arts Studio Sign Out

Allows students and faculty to reserve time in studios, or anything else suited
for a schedule.

Copyright (C) 2013 Andy Spillman - andy at andyspillman dot com 

Distributed under the terms of the GNU General Public License v3.
******************************************************************* 
This was written using Perl and CGI.pm

WHY THIS WAS CREATED I was tired of needing to physically walk to the doors of
the studios to check whether they were free or not, or to pencil myself in.  In
the middle of a busy semester, walking somewhere to check a piece of paper is a
waste of time, yet studio time is a scarce commodity, leading people to "play it
safe" and possibly sign out time too far in advance.   Why not be able to view
and modify the schedules EVERYWHERE??

******************************************************************

**FEATURES**


INDEX

This the landing page.  It has a dynamically generated list of studios, based on
visibility preferences set in Faculty Tools.


SCHEDULE PAGES

Each studio has a schedule. Students on the roster for a given room can take
open time slots.  Once a timeslot is taken, it can be assigned to anyone else on
the roster, or given up.  Faculty have access to two more options:

-shared- allows more than one user to own a timeblock.  Any of them can give up
this time on behalf of everyone.  It then becomes a regular open timeblock.

-reserved- allows any text to be inserted, for example "Jazz Combo"...when more
info is necessary.


FACULTY TOOLS 

Faculty Tools: On this page, faculty can add/remove rooms.  For
each room, Faculty can set: 

timeblock length - 1,2,or 4 hours.  I recommend against using 4 hours. 
visibility  - affects whether index displays room and nothing else
delete - by checking box and clicking submit roster

upload - upload an Excel Workbook .xls (not .xlsx) which contains a roster for
the given room.  Only students on this roster can reserve time in that room.
Any faculty from any roster upload will be recognized. Top row is ignored for
column headings.  Column mappings are as follows:

real name                            = column 1
username                             = column 2
role (instructor or <anything else>) = column 4 


This follows the format of rosters exported from Oncourse.


**********************************************************************
INSTALLATION INFO



REQUIRES:
HTTP Server with CGI functionality.  perl_mod is untested (see below).


modules (available on CPAN):

 - DateTime
 - DateTime::Format::Strptime
 - CGI::Session
 - Spreadsheet::ParseExcel


SQL application:
 - sqlite3



ADDITIONAL DETAILS

This has been developed and tested using the CGI functionality built into
Apache Tomcat/5.5.17 mostly because I already had convenient access to a server
running it.  If used with mod_perl, Apache::PerlRun should be used, if possible,
to be safe until it can be more thoroughly tested.


DATABASE NOTES

sqlite3 is used for database access.  It provides simple file-based database
support.  Communication to database is accomplished via DBI.

4 database files residing in db/ are used:



 - sessions.db

   This file  NEEDS TO BE DELETED regularly, or it will grow with orphaned
   sessions.  A good time to delete this would be when nobody is logged in, but
   worst case, users would simply be suddenly logged out.



 - rooms.db 

   This contains tables mapping individual timeblocks to their owners.  Each
   table name is the name of a room.  If deleted, all rooms will need to be
   deleted and re-added on the Faculty Tools page. All timeblock
   ownership data will be lost.  The rooms.db file, with default ownership data
   will be regenerated.




 - config.db 

   contains configuration information for each room.


 - rosters.db 

   contains a class roster for each room.  Room titles are table titles.  There
   is also a table called 'faculty' which keeps a list of usernames and
   realnames of faculty members.  Everything in this file can easily be
   regenerated UNLESS the faculty table is dropped.  If there are no faculty
   listed, then no one can access the Faculty Tools page.  If this is the case,
   then open rosters.db in sqlite 3:

>sqlite3 rosters.db

and create a table called faculty and add at a faculty username to grant access
to Faculty Tools by executing the following SQL:

CREATE TABLE faculty (username PRIMARY KEY, realname); INSERT INTO faculty
VALUES ('kstrauss', 'Konrad Strauss');

 .exit


then kstrauss (or whoever) will be able to access Faculty Tools and finish
setting up everything.

END

